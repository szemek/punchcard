class Builder
  def generate
    days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']
    array = [
      [0,0,0],[0,1,0],[0,2,1],[0,3,0],[0,4,0],[0,5,2],[0,6,2],[0,7,0],[0,8,1],[0,9,6],[0,10,3],[0,11,8],[0,12,9],[0,13,1],[0,14,4],[0,15,1],[0,16,0],[0,17,1],[0,18,0],[0,19,6],[0,20,1],[0,21,4],[0,22,1],[0,23,0],
      [1,0,1],[1,1,0],[1,2,1],[1,3,0],[1,4,0],[1,5,0],[1,6,0],[1,7,0],[1,8,0],[1,9,0],[1,10,0],[1,11,0],[1,12,0],[1,13,0],[1,14,0],[1,15,0],[1,16,0],[1,17,1],[1,18,0],[1,19,2],[1,20,2],[1,21,1],[1,22,2],[1,23,1],
      [2,0,0],[2,1,0],[2,2,0],[2,3,0],[2,4,0],[2,5,0],[2,6,0],[2,7,0],[2,8,2],[2,9,3],[2,10,4],[2,11,0],[2,12,0],[2,13,2],[2,14,0],[2,15,1],[2,16,0],[2,17,0],[2,18,1],[2,19,1],[2,20,2],[2,21,3],[2,22,0],[2,23,0],
      [3,0,0],[3,1,1],[3,2,0],[3,3,0],[3,4,1],[3,5,0],[3,6,0],[3,7,2],[3,8,4],[3,9,2],[3,10,2],[3,11,2],[3,12,4],[3,13,8],[3,14,2],[3,15,4],[3,16,4],[3,17,7],[3,18,4],[3,19,9],[3,20,5],[3,21,10],[3,22,42],[3,23,16],
      [4,0,14],[4,1,5],[4,2,3],[4,3,2],[4,4,0],[4,5,0],[4,6,0],[4,7,0],[4,8,1],[4,9,1],[4,10,0],[4,11,1],[4,12,1],[4,13,4],[4,14,3],[4,15,0],[4,16,2],[4,17,1],[4,18,1],[4,19,0],[4,20,0],[4,21,6],[4,22,2],[4,23,7],
      [5,0,2],[5,1,3],[5,2,1],[5,3,0],[5,4,0],[5,5,0],[5,6,1],[5,7,0],[5,8,0],[5,9,1],[5,10,1],[5,11,3],[5,12,0],[5,13,1],[5,14,2],[5,15,0],[5,16,0],[5,17,1],[5,18,1],[5,19,9],[5,20,4],[5,21,6],[5,22,3],[5,23,3],
      [6,0,5],[6,1,7],[6,2,0],[6,3,0],[6,4,1],[6,5,2],[6,6,1],[6,7,3],[6,8,1],[6,9,4],[6,10,3],[6,11,4],[6,12,3],[6,13,1],[6,14,0],[6,15,0],[6,16,1],[6,17,1],[6,18,0],[6,19,0],[6,20,1],[6,21,3],[6,22,0],[6,23,2]
    ]

    radius = 15.5
    maximum = array.map{|e| e[2]}.max.to_f

    data = {}
    (0..6).each{|e| data.merge!({ e => {} })}
    array.each do |e|
      data[e[0]].merge!({ e[1] => e[2]})
    end

    builder = Nokogiri::XML::Builder.new do |xml|
      xml.svg('width' => '920', 'height' => '520', 'class' => 'viz') {
        xml.g('transform' => 'translate(0,0)') {
          (0..6).map do |day|
            xml.g('class' => 'day', 'transform' => "translate(0, #{9 + day * 67})") {

              xml.line('x1' => '0', 'y1' => '60', 'x2' => '920', 'y2' => '60', 'class' => 'axis')
              xml.text_('class' => 'label', 'dy' => '30') {
                xml.text(days[day])
              }

              (0..23).map do |hour|
                xml.g('class' => 'hour', 'transform' => "translate(#{104 + hour * 34}, 0)", 'width' => '31') {
                  xml.line('x1' => '0', 'y1' => '45', 'x2' => '0', 'y2' => '60', 'class' => "axis #{hour.even? ? 'even' : 'odd'}")
                  r = radius * Math.sqrt(data[day][hour] / maximum)
                  xml.circle('r' => r, 'cy' => '25', 'class' => 'day')
                }
              end
            }
          end

          xml.g {
            (0..23).map do |n|
              xml.text_('text-anchor' => 'middle', 'transform' => "translate(#{104 + n * 34}, 500)", 'class' => 'label') {
                xml.text("#{n}")
              }
            end
          }
        }
      }
    end
    builder.to_xml
  end
end
